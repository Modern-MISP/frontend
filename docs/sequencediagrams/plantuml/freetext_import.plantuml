@startuml
hide footbox

actor User as user
box "Frontend"
participant "events/[id]" as eventview
participant "events/[id]/attributes" as attributelist
participant "Freetext Import Dialogue" as freetextdialogue <<Component>>
participant "Create Attributes View" as createattributesview <<Component>>
participant "Top Menu" as topmenu <<Component>>
participant "Layout" as layout <<Component>>
end box
database "Backend API" as api

note over eventview : event view is displayed

activate eventview
user -> eventview : click on "attributes"
eventview --> user : redirect to /events/[id]/attributes
deactivate eventview

activate attributelist
attributelist -> api : GET attributes
api --> attributelist : event attributes

user -> topmenu : toggle edit mode
topmenu --> layout : state changes
layout -> attributelist : enter edit mode
activate attributelist
user -> attributelist : click on "freetext import dialogue"


activate freetextdialogue
attributelist -> freetextdialogue : open "freetext import dialogue"
freetextdialogue --> user : freetext import dialogue
user -> freetextdialogue : enter inputs
freetextdialogue -> api : GET similar attribute patterns
api --> freetextdialogue : similar attribute patterns

freetextdialogue -> createattributesview : suggest attributes
deactivate freetextdialogue
activate createattributesview
createattributesview --> user : display dialogue
user -> createattributesview : change internal value
createattributesview --> createattributesview : update internal value
createattributesview --> user : display inputs 
user -> createattributesview : click "save"

createattributesview -> api : PATCH event
api --> createattributesview : success
createattributesview --> attributelist : update values
deactivate createattributesview

attributelist -> layout : exit edit mode
deactivate attributelist
deactivate attributelist
layout -> topmenu : view mode
@enduml
