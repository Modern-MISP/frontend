stages:
  - generate_docs
  - generate_uml_svg
  - generate_pdf
  - push_docs

default:
  tags:
    - docker # Tag is required to make the CI runner accept the jobs

variables:
  SOURCE_DATE_EPOCH: 0

generate_docs:
  stage: generate_docs
  image: node:latest
  script:
    - rm -r ./docs/generated
    - echo @feathecutie:registry=https://gitlab.com/api/v4/projects/52994631/packages/npm/ >> .npmrc
    - npx @feathecutie/svelte-to-uml@latest . ./docs/generated
  artifacts:
    paths:
      - docs/generated
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: install_dependencies
      artifacts: true

generate_uml_svg:
  stage: generate_uml_svg
  image: 
    name: docker.io/plantuml/plantuml
    entrypoint: [""]
  script:
    - find docs -type f -name *.plantuml -exec java -Djava.awt.headless=true -jar /opt/plantuml.jar -tsvg {} \;
  artifacts:
    paths:
      - docs

generate_pdf:
  stage: generate_pdf
  image: hub.cert.kit.edu:5000/kit-cert-latex:latest
  script:
     - apt-get update
     - apt-get -y install librsvg2-bin
     - cd docs/generated
     - pandoc document.md -s -V linkcolor=blue --pdf-engine=lualatex -f markdown-implicit_figures+inline_code_attributes --toc -N -o document.pdf
  artifacts:
    paths:
      - docs

push_docs:
  stage: push_docs
  image: hub.cert.kit.edu:5000/kit-cert-debrelease:latest
  rules:
    - if: $CI_COMMIT_TAG != null
      when: never
    # Never run for scheduled pipelines
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"
      when: manual
  script:
     - git remote set-url origin https://gitlab-ci-token:${PUSH_TOKEN}@gitlab.kit.edu/kit/kit-cert/mmisp/frontend.git
     - git add docs/
     - git config user.name uml-pipeline
     - git config user.email uml-pipeline@example.com
     - git commit -m "Auto-generated docs for '${CI_COMMIT_TITLE}'" || true # This let's the commit fail in case there was no change without failing the pipeline
     - git push -o ci.skip origin HEAD:${CI_COMMIT_BRANCH} # Try to push from detached HEAD because idk what's happening anymore
